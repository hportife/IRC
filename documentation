Внутрисервеное взаимодействие.

На момент последнего апдейта начата разработка классов пользователя (usermv ), 
user_creator, room, nickname_storage.

Класс user бдует обозначать пользователя. Находится в альфа-проработке. Будет иметь 
параметры самого пользователя и айдишник, который будет назначен accept-ом.

Класс room бдует обозначать комнату (канал/переписку). Находится в альфа-проработке

Класс user_creator будет принимать параметры при появлении нового соединения, хранить 
их пока соединение существует, или пользователь не был полностью завалидирован 
и создан, или валидацию не прошли какие-либо параметры переданные клиентом для 
регистрации (входа) на сервере. Принцип работы будет таковым: при появлении соединения, 
сервер будет создавать объект Юзер-криейтор, передавая конструктору accept-id, после 
чего будут поочерёдно передаваться в сеттеры параметры. Когда все параметры будут 
переданы, серевер должен будет запустить валидатор, который будет проверять правильность 
ввода пароля и корректность ведёного ника с помощью хранилища ников (nickname_storage).
В зависимости от полученной ошибки будут приниматься действия. 

ПОДРОБНОЕ ОПИСАНИЕ ПАРАМЕТРОВ, ИСПОЛНЯЕМОГО ФУНКЦИОНАЛА КЛАССОВ, ИХ ИСПОЛЬЗОВАНИЕ В СЕРВЕРЕ
И РАБОТА САМОГО СЕРВЕРА БУДЕТ ПО ПРИВЕДЕНИЮ КЛАССОВ В СТАТУС "ПЕРВИЧНО ГОТОВ"


Класс NicknameStorage На момент последней версии (commit 5802177920f179b4bc14c97dd0f1111adf427316)
  В качестве предопределённых возвратных значений имеет: 
    - ICKNAMEISMAYBEGIVEN  -  никнейм может быть выдан пользователю и занесён в хранилище никнеймов.
    - ERR_NICKNAMEINUSE    -  никнейм имеется в хранилище и не может быть выдан пользователю.
    - ERR_NICKNAMEISTOOLONG-  никнейм имеет длинну большую, чем разрешённая (> 9 символов).
    - ERR_NICKNAMEISEMPTY  -  никнейм является пустой строкой.
    - NICKNAMEHASBEENGIVEN -  никнейм был выдан пользователю и занесн в хранилище этим методом.

  Реализованные методы:
    -Конструктор/деструктор   : В теле имеют только вывод информационных сообщений.
    -get_storage              : Вывод всех ников в хранилище в формате: "N: Nickname\n"
    -check_size_added_nickname: Проверка длинны никнейма, возвращаемые значения: 
                                                              -ERR_NICKNAMEISTOOLONG
                                                              -ERR_NICKNAMEISEMPTY
                                                              -0 (нарушения отс.)
    -add_nickname             : Выполняет check_size_added_nickname и в случае возвращения 
                                0, добавляет никнейм в хранилище и сортирует его.
    -delete_nickname          : Ищет никнейм в хранилище, в случае нахождения - удаляет и 
                                возвращает 0, если никнейм не был найден, возвращает 1
    -search_a_conflict        : Ищет никнейм в хранилище, если никнейм был найден - 
                                возвращет ERR_NICKNAMEINUSE, если никнейм не был найден -
                                возвращает ICKNAMEISMAYBEGIVEN
    -sort_a_storage           : Использует std::sort и выводит сообщение о своём использовании
    
    ПРИМЕЧАНИЯ: 1.  delete_nickname и search_a_conflict используют в своей основе одну и ту же 
                    механику поиска, следует вынести её в отдельный метод.
                2.  sort_a_storage использует слепой std::sort без применения его на хранилище,
                    нужно проверить, возможно, это ничего не сортирует, если это так, то применить
                    std::sort на вектор, лежащий в основе NicknameStorage.
                    
                    
Класс UserStorage На момент последней версии (commit 5802177920f179b4bc14c97dd0f1111adf427316)
  Предопределённых возвратных значений не имеет.
  Внутренние поля: 
    -Вектор пользователей
  Реализованные методы:
    -Конструктор/деструктор   : В теле имеют только вывод информационных сообщений.
    -add_user                 : с помощью std::vector.push_back добавляет юзера в хранилище
                                и выводит информационное сообщение
    -search_by_nickname       : Ищет в хранилище юзера по никнейму. Если юзер есть - возвращает 
                                его, если нет, то возвращает nullptr 
    -search_by_id             : Ищет в хранилище юзера по айди. Если юзер есть - возвращает 
                                его, если нет, то возвращает nullptr
                                
    ПРИМЕЧАНИЯ: Класс недописан. Как минимум нужно добавить метод удаления пользователя.
                              
                              
                              
                              
